// Code generated by mockery v2.53.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Supplier is an autogenerated mock type for the Supplier type
type Supplier struct {
	mock.Mock
}

// Get provides a mock function with given fields: key
func (_m *Supplier) Get(key string) (string, bool) {
	ret := _m.Called(key)

	if len(ret) == 0 {
		panic("no return value specified for Get")
	}

	var r0 string
	var r1 bool
	if rf, ok := ret.Get(0).(func(string) (string, bool)); ok {
		return rf(key)
	}
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(key)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(key)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

// NewSupplier creates a new instance of Supplier. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSupplier(t interface {
	mock.TestingT
	Cleanup(func())
}) *Supplier {
	mock := &Supplier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
